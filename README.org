#+TITLE: org-reminders

#+HTML: <a href ="https://github.com/ginqi7/org-reminders/blob/master/README.zh-CN.org"><img src="https://img.shields.io/badge/README-%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87-555555.svg"/></a>

org-reminders is an Emacs plugin designed to facilitate interactions between macOS Reminders and Org mode. The plugin allows you to manage reminders stored in macOS Reminders from within Org mode, providing a seamless experience for users who rely on both systems.

This project depends on the [[https://github.com/keith/reminders-cli][reminders-cli]] command-line tool, offering easy-to-use commands to interact with macOS Reminders.

* Features

- *Add Reminders*: Easily add new reminders to specific lists in macOS Reminders.
- *Edit Reminders*: Update the title, notes of existing reminders.
- *Complete and Uncomplete Reminders*: Toggle the completion status of your reminders.
- *Delete Reminders*: Remove reminders from your lists.
- *Display Reminders*: Render reminders in an organized manner using Org mode structure.
- *Sync Functionality*: Synchronize reminders between macOS Reminders and Org mode.

[[https://github.com/user-attachments/assets/a15df8bd-0739-4a48-8739-4e3ceee64b0b]]

* Prerequisites

- *[[https://github.com/keith/reminders-cli][reminders-cli]]* : A simple CLI for interacting with macOS reminders

* Installation

** reminders-cli
#+begin_src shell
  brew install keith/formulae/reminders-cli
#+end_src

* grant reminders access
When you encounter an error :

#+begin_quote
"error: you need to grant reminders access\n"
#+end_quote

Running this command in Eshell will populate Emacs permissions.
#+begin_src shell
  osascript -e 'tell application "Reminders" to show (first list whose name is "blabla")'
#+end_src

** package

- clone the project in your own emacs configuration files directory, like:
#+begin_src shell
  git clone git@github.com:ginqi7/org-reminders.git ~/.emacs.d/lisp/org-reminders
#+end_src

- add the path to ‘load-path’
#+begin_src shell
(add-to-list 'load-path (expand-file-name "~/.emacs.d/lisp/d/lisp/org-reminders"))
#+end_src

* Configuration
Add the following line to your Emacs configuration file (e.g., `.emacs` or `init.el`):

#+begin_src emacs-lisp
  (require 'org-reminders)
#+end_src

* Usage
** Global
*** A Transient Prefix
- *org-reminders-prefix* : A transient prefix for multiple org-reminders commands.
*** Viewing Reminders in Org manner
To view your reminders, run the =org-reminders= command:

This command will switch to a buffer named `*reminders*` and display all your reminders organized by lists.

*** Adding a Reminder List

To add a Reminder List, run the =org-reminders-add-list= command:

This command requires input: ~list-name~.

*** Adding a Reminder

To add a Reminder, run the ~org-reminders-add-reminder~ command:

This command requires input: ~list-name~, ~title~, and optionally, ~priority~ and ~notes~.

*** Delete a Reminder

To add a Reminder, run the ~org-reminders-add-reminder~ command:

This command requires input: ~list-name~, ~title~, and optionally, ~priority~ and ~notes~.


** In a Org mode file
*** Synchronizing Buffer
- *org-reminders-sync-buffer* : Synchronization between buffer elements and the Reminders app.
*** Delete Element at pointer
- *org-reminders-delete-element-at-pointer* : Delete the element at point.
*** Synchronizing Element at pointer
- *org-reminders-sync-element-at-pointer* : Synchronization of the element at point with the Reminders app.

* Known Issues
- Completed reminders cannot be deleted.
- The CLI and app display inconsistent times in CST Zonetime.

* Contributions

Contributions are welcome! Please submit issues and pull requests through the project’s repository.
